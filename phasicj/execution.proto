// Copyright 2019 David Johnston

syntax = "proto3";

import "phasicj/vectorclock.proto";

package phasicj;

option java_package = "org.phasicj";

message Trace {
    uint64 thread_id = 1;
    repeated Event events = 2;
}

message Event {

    message Read {
        MemoryLocation location = 1;
    }
    message Write {
        MemoryLocation location = 1;
    }
    message VolatileRead {
        MemoryLocation location = 1;
    }
    message VolatileWrite {
        MemoryLocation location = 1;
    }
    message MonitorAcquire {
        Monitor monitor = 1;
    }
    message MonitorRelease {
        Monitor monitor = 1;
    }

    VectorClock timestamp = 1;

    oneof event {
        Read read = 2;
        Write write = 3;
        VolatileRead volatile_read = 4;
        VolatileWrite volatile_write = 5;
        MonitorAcquire monitor_acquire = 6;
        MonitorRelease monitor_release = 7;
    }
}

message MemoryLocation {
    message StaticVariable {
        string classloader = 1;
        string class = 2;
        string name = 3;
    }
    message InstanceVariable {
        string classloader = 1;
        string instance = 2;
        string name = 3;
    }
}

message Monitor {
    string instance = 1;
}
